[
  {
    "title": "E-commerce Platform",
    "description": "A full-featured e-commerce platform with user authentication, product management, inventory tracking, and secure payment integration using Stripe. Features include user registration, shopping cart functionality, order management, admin dashboard, and responsive design for mobile and desktop users.",
    "shortDescription": "Full-featured e-commerce platform with modern tech stack and payment processing",
    "slug": "ecommerce-platform",
    "technologies": ["React", "Node.js", "MongoDB", "Stripe", "Express.js", "Redux"],
    "link": "https://your-ecommerce-demo.com",
    "githubLink": "https://github.com/yourusername/ecommerce-platform",
    "featured": true,
    "order": 1,
    "status": "published",
    "projectType": "web-app",
    "difficulty": "advanced",
    "duration": "3 months",
    "teamSize": 1,
    "challenges": "Implementing real-time payment processing, ensuring PCI compliance, handling concurrent user sessions, and optimizing database queries for large product catalogs. The biggest challenge was integrating Stripe webhooks securely while maintaining data consistency.",
    "learnings": "Advanced state management with Redux, payment gateway integration best practices, security compliance requirements, database optimization techniques, and implementing real-time features with WebSockets. Learned the importance of proper error handling in financial transactions.",
    "tags": ["e-commerce", "full-stack", "payment-processing", "authentication", "admin-dashboard"],
    "startDate": "2024-01-01",
    "endDate": "2024-04-01"
  },
  {
    "title": "Social Media Dashboard",
    "description": "A comprehensive dashboard for managing multiple social media accounts, scheduling posts, analyzing engagement metrics, and generating performance reports. Includes analytics visualization, content calendar, and automated posting capabilities.",
    "shortDescription": "Social media management dashboard with analytics and scheduling",
    "slug": "social-media-dashboard",
    "technologies": ["React", "TypeScript", "Chart.js", "Node.js", "PostgreSQL", "Socket.io"],
    "link": "https://your-social-dashboard.com",
    "githubLink": "https://github.com/yourusername/social-media-dashboard",
    "featured": false,
    "order": 2,
    "status": "published",
    "projectType": "web-app",
    "difficulty": "intermediate",
    "duration": "2 months",
    "teamSize": 1,
    "challenges": "Integrating multiple social media APIs (Facebook, Twitter, Instagram), handling rate limiting, implementing real-time updates, and creating intuitive data visualizations. Managing OAuth flows for different platforms was complex.",
    "learnings": "API integration patterns, OAuth implementation, real-time data handling with WebSockets, chart library customization, and working with third-party social media APIs. Learned about rate limiting strategies and error handling.",
    "tags": ["social-media", "dashboard", "analytics", "scheduling", "api-integration"],
    "startDate": "2024-02-01",
    "endDate": "2024-04-01"
  },
  {
    "title": "Personal Finance Tracker",
    "description": "A personal finance application for budgeting, expense tracking, and financial goal setting. Features include income/expense categorization, budget planning, financial reports, goal tracking, and data visualization with charts and graphs.",
    "shortDescription": "Personal finance tracker with budgeting and goal setting features",
    "slug": "personal-finance-tracker",
    "technologies": ["React", "Python", "Django", "PostgreSQL", "Chart.js", "Docker"],
    "link": "https://your-finance-app.com",
    "githubLink": "https://github.com/yourusername/personal-finance-tracker",
    "featured": false,
    "order": 3,
    "status": "published",
    "projectType": "web-app",
    "difficulty": "intermediate",
    "duration": "2.5 months",
    "teamSize": 1,
    "challenges": "Designing an intuitive user interface for financial data, implementing secure data storage, creating meaningful financial insights, and ensuring data accuracy. The challenge was making complex financial concepts simple and actionable.",
    "learnings": "Django REST framework development, financial data modeling, chart visualization techniques, Docker containerization, and user experience design for financial applications. Learned about financial data privacy and security best practices.",
    "tags": ["finance", "budgeting", "tracking", "python", "django", "data-visualization"],
    "startDate": "2024-03-01",
    "endDate": "2024-05-15"
  },
  {
    "title": "Task Management API",
    "description": "A RESTful API for task management with user authentication, project organization, task assignment, progress tracking, and notification system. Built with Node.js and Express, featuring JWT authentication and real-time updates.",
    "shortDescription": "RESTful task management API with real-time features",
    "slug": "task-management-api",
    "technologies": ["Node.js", "Express.js", "MongoDB", "JWT", "Socket.io", "Jest"],
    "link": "https://your-task-api-docs.com",
    "githubLink": "https://github.com/yourusername/task-management-api",
    "featured": false,
    "order": 4,
    "status": "published",
    "projectType": "api",
    "difficulty": "intermediate",
    "duration": "1.5 months",
    "teamSize": 1,
    "challenges": "Implementing real-time notifications, designing efficient database schemas for task relationships, handling concurrent updates, and ensuring API security. Managing WebSocket connections and implementing proper error handling was challenging.",
    "learnings": "RESTful API design principles, JWT authentication implementation, WebSocket integration, database relationship modeling, API testing with Jest, and documentation best practices. Learned about API security and rate limiting.",
    "tags": ["api", "task-management", "real-time", "authentication", "websockets"],
    "startDate": "2024-04-01",
    "endDate": "2024-05-15"
  },
  {
    "title": "Weather App",
    "description": "A mobile-responsive weather application that provides current weather conditions, forecasts, and weather alerts. Features include location-based weather, hourly and daily forecasts, weather maps, and customizable weather widgets.",
    "shortDescription": "Mobile-responsive weather app with forecasts and alerts",
    "slug": "weather-app",
    "technologies": ["React", "TypeScript", "OpenWeather API", "Tailwind CSS", "PWA", "Geolocation"],
    "link": "https://your-weather-app.com",
    "githubLink": "https://github.com/yourusername/weather-app",
    "featured": false,
    "order": 5,
    "status": "published",
    "projectType": "web-app",
    "difficulty": "beginner",
    "duration": "1 month",
    "teamSize": 1,
    "challenges": "Integrating with external weather APIs, handling geolocation permissions, implementing responsive design for mobile devices, and optimizing API calls to avoid rate limiting. Managing state for real-time weather updates was interesting.",
    "learnings": "External API integration, geolocation API usage, responsive design principles, Progressive Web App features, and state management for real-time data. Learned about API key management and error handling for external services.",
    "tags": ["weather", "mobile", "api-integration", "geolocation", "pwa"],
    "startDate": "2024-05-01",
    "endDate": "2024-06-01"
  }
]
